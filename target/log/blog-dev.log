2020-01-03 11:59:18.223 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.VisitorMapper.selectByExample  : ==>  Preparing: SELECT id,time,ip,city,url,browseType,osType,black,visitCount FROM visitor WHERE ( ip = ? ) 
2020-01-03 11:59:18.248 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.VisitorMapper.selectByExample  : ==> Parameters: 180.153.206.36(String)
2020-01-03 11:59:18.591 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.VisitorMapper.selectByExample  : <==      Total: 44
2020-01-03 11:59:18.733 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.mapper.VisitorMapper.insert      : ==>  Preparing: INSERT INTO visitor ( id,time,ip,city,url,browseType,osType,black,visitCount ) VALUES( ?,?,?,?,?,?,?,?,? ) 
2020-01-03 11:59:18.747 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.mapper.VisitorMapper.insert      : ==> Parameters: null, 2020-01-03 11:59:18.6(Timestamp), 180.153.206.36(String), 中国上海(String), /page/27/blogDetail(String), Chrome(String), Windows 10(String), 1(Integer), null
2020-01-03 11:59:18.883 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.mapper.VisitorMapper.insert      : <==    Updates: 1
2020-01-03 11:59:18.884 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.V.insert!selectKey             : ==>  Executing: SELECT LAST_INSERT_ID() 
2020-01-03 11:59:19.001 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.V.insert!selectKey             : <==      Total: 1
2020-01-03 11:59:19.429 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.VisitorMapper.selectByExample  : ==>  Preparing: SELECT id,time,ip,city,url,browseType,osType,black,visitCount FROM visitor WHERE ( ip = ? ) 
2020-01-03 11:59:19.430 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.VisitorMapper.selectByExample  : ==> Parameters: 101.226.65.104(String)
2020-01-03 11:59:19.537 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.VisitorMapper.selectByExample  : <==      Total: 100
2020-01-03 11:59:19.715 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.mapper.VisitorMapper.insert      : ==>  Preparing: INSERT INTO visitor ( id,time,ip,city,url,browseType,osType,black,visitCount ) VALUES( ?,?,?,?,?,?,?,?,? ) 
2020-01-03 11:59:19.718 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.mapper.VisitorMapper.insert      : ==> Parameters: null, 2020-01-03 11:59:19.546(Timestamp), 101.226.65.104(String), 中国上海(String), /page/27/blogDetail(String), Chrome(String), Windows 10(String), 1(Integer), null
2020-01-03 11:59:19.838 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.mapper.VisitorMapper.insert      : <==    Updates: 1
2020-01-03 11:59:19.839 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.V.insert!selectKey             : ==>  Executing: SELECT LAST_INSERT_ID() 
2020-01-03 11:59:19.902 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.V.insert!selectKey             : <==      Total: 1
2020-01-03 11:59:20.190 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.ArticleMapper.selectByExample  : ==>  Preparing: SELECT id,title,categoryId,author,addTime,agreeNum,browseNum,commentNum,keyWord,status,isRecommend,isTop,images,content,summary,isYuanChuang,isDiscuss,categoryName FROM article WHERE ( isRecommend = ? ) 
2020-01-03 11:59:20.194 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.ArticleMapper.selectByExample  : ==> Parameters: 1(Integer)
2020-01-03 11:59:20.486 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.ArticleMapper.selectByExample  : <==      Total: 11
2020-01-03 11:59:20.549 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.ArticleMapper.selectByExample  : ==>  Preparing: SELECT id,title,categoryId,author,addTime,agreeNum,browseNum,commentNum,keyWord,status,isRecommend,isTop,images,content,summary,isYuanChuang,isDiscuss,categoryName FROM article WHERE ( isTop = ? ) 
2020-01-03 11:59:20.549 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.ArticleMapper.selectByExample  : ==> Parameters: 1(Integer)
2020-01-03 11:59:20.674 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.ArticleMapper.selectByExample  : <==      Total: 9
2020-01-03 11:59:20.742 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.A.getArticleByBrowsers         : ==>  Preparing: select * from article order by browsenum desc LIMIT 4 
2020-01-03 11:59:20.751 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.A.getArticleByBrowsers         : ==> Parameters: 
2020-01-03 11:59:20.869 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.A.getArticleByBrowsers         : <==      Total: 4
2020-01-03 11:59:20.946 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.mapper.ArticleMapper.selectAll   : ==>  Preparing: SELECT id,title,categoryId,author,addTime,agreeNum,browseNum,commentNum,keyWord,status,isRecommend,isTop,images,content,summary,isYuanChuang,isDiscuss,categoryName FROM article 
2020-01-03 11:59:20.948 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.mapper.ArticleMapper.selectAll   : ==> Parameters: 
2020-01-03 11:59:21.177 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.mapper.ArticleMapper.selectAll   : <==      Total: 11
2020-01-03 11:59:21.247 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.mapper.LinkMapper.selectAll      : ==>  Preparing: SELECT id,linkUrl,linkName,isAgree,addTime,clickNum FROM link 
2020-01-03 11:59:21.249 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.mapper.LinkMapper.selectAll      : ==> Parameters: 
2020-01-03 11:59:21.312 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.mapper.LinkMapper.selectAll      : <==      Total: 8
2020-01-03 11:59:21.374 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.mapper.CategoryMapper.selectAll  : ==>  Preparing: SELECT id,categoryName,addTime,articleNum FROM category 
2020-01-03 11:59:21.375 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.mapper.CategoryMapper.selectAll  : ==> Parameters: 
2020-01-03 11:59:21.456 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.mapper.CategoryMapper.selectAll  : <==      Total: 10
2020-01-03 11:59:21.531 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.A.selectOneByExample           : ==>  Preparing: SELECT id,title,categoryId,author,addTime,agreeNum,browseNum,commentNum,keyWord,status,isRecommend,isTop,images,content,summary,isYuanChuang,isDiscuss,categoryName FROM article WHERE ( id = ? ) 
2020-01-03 11:59:21.531 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.A.selectOneByExample           : ==> Parameters: 27(Integer)
2020-01-03 11:59:21.597 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.A.selectOneByExample           : <==      Total: 1
2020-01-03 11:59:21.664 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.A.updateByExampleSelective     : ==>  Preparing: UPDATE article SET id = id,title = ?,categoryId = ?,author = ?,addTime = ?,agreeNum = ?,browseNum = ?,commentNum = ?,keyWord = ?,status = ?,isRecommend = ?,isTop = ?,images = ?,content = ?,summary = ?,isYuanChuang = ?,isDiscuss = ?,categoryName = ? WHERE ( id = ? ) 
2020-01-03 11:59:21.668 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.A.updateByExampleSelective     : ==> Parameters:  jvm内存模型(String), 7(Integer), 何袁辉(String), 2019-12-03 18:06:38.0(Timestamp), 9(Integer), 67(Integer), 0(Integer), jvm(String), 1(Integer), 1(Integer), 1(Integer), http://localhost:8081/images/82ad18fca433c2a102319063a17cfc8f1575335182602.jpg(String), ### jvm内存模型
JVM的内存模型很多人都看过，周志明老师的《深入理解Java虚拟机》已经解释的很清楚了。但是只限于概念性的知识，关于底层的原理并没有做深入的阐述，下面我们通过一个实例代码来分析JVM内存模型之间的联系与各模块之间的底层原理，底层比较复杂，可能篇幅有点长，请耐心阅读，一定给你讲透彻，阅读本文建议同《深入理解JVM》这本书一起参考。

此处先上一段代码，以下通过代码逐步分析：

```java

public class Math {
	public int compute(){          //一个方法对应一块栈帧内存区域
		int a=1;
		int b=2;
		int c=(a+b)*10;
		return c;
	}
	public static void main(String[] args) {
		Math math=new Math();
		math.compute();
	}
}
```

这段代码生成的字节码文件如下：

```java

Compiled from "Math.java"
public class com.lucas.Demo1.Math {
  public static final java.lang.Integer CONATANT;

  public com.lucas.Demo1.Math();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public int compute();
    Code:
       0: iconst_1
       1: istore_1
       2: iconst_2
       3: istore_2
       4: iload_1
       5: iload_2
       6: iadd
       7: bipush        10
       9: imul
      10: istore_3
      11: iload_3
      12: ireturn

  public static void main(java.lang.String[]);
    Code:
       0: new           #2                  // class com/lucas/Demo1/Math
       3: dup
       4: invokespecial #3                  // Method "<init>":()V
       7: astore_1
       8: aload_1
       9: invokevirtual #4                  // Method compute:()I
      12: pop
      13: return

  static {};
    Code:
       0: sipush        666
       3: invokestatic  #5                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       6: putstatic     #6                  // Field CONATANT:Ljava/lang/Integer;
       9: return
}

```




还是先上最经典的那一幅JVM内存模型图：
![在这里插入图片描述](https://img-blog.csdnimg.cn/20191019151724253.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjE0Njk5Ng==,size_16,color_FFFFFF,t_70)

我们先来分析虚拟机栈的内存结构（图中箭头可以不考虑，只是局部的图）：
![在这里插入图片描述](https://img-blog.csdnimg.cn/20191019154505572.png)

以上图片的名词在此不做解释，默认读者已经知道，我们主要探究每一块区域的底层原理。

以上java在执行时，线程main在虚拟机栈内存中开辟一块空间。每个方法按照顺序依次进栈，每一个方法在执行时开辟一个栈帧，栈帧中存储的信息见上图。下面依次解释每一个区域的作用：以下不讲定义，只是以上面代码为实例，加上作者本人的理解，如有偏差，请自行取舍。

#### 局部变量表：
故名思意就是存放局部变量的，以上代码中，在  **compute（）** 方法创建的栈帧的局部变量表中存放的是：a,b,c三个局部变量，在 **main()** 方法创建的栈帧的局部变量表中存放的是 math这个变量。
#### 操作数栈：
在作者的理解看来，操作数栈就是一个中转站。
对照前面的字节码指令，我们可以很清晰的知道了每一步，虚拟机的底层干了哪些事。
第一步，执行iconst命令
将一个常量加载到操作数栈![在这里插入图片描述](https://img-blog.csdnimg.cn/20191019155802174.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjE0Njk5Ng==,size_16,color_FFFFFF,t_70)
这时我们可以看到操作数栈中有2个常量 1 和 2；

第二步：执行字节码指令istore，将整型类型值存入局部变量中，并将操作数栈的内存释放出来。
![在这里插入图片描述](https://img-blog.csdnimg.cn/20191019162230527.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjE0Njk5Ng==,size_16,color_FFFFFF,t_70)
第三步：执行字节码指令： 
   

  
```java
    4: iload_1
    5: iload_2
    6: iadd
    7: bipush        10
    9: imul
    10: istore_3
    11: iload_3
    12: ireturn
```

:从局部变量中装载第一个int类型的值到操作数栈
![在这里插入图片描述](https://img-blog.csdnimg.cn/20191019170110428.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjE0Njk5Ng==,size_16,color_FFFFFF,t_70)
以上图片难以准确的解释程序执行时JVM的执行流程，建议研究以上字节码文件，指令可查看字节码指令手册，其实研究JVM的工作流程，最好的方式就是研究字节码文件。



#### 动态连接区域：
笔者尚未彻底明白。。。欢迎朋友们给我留言，交流


笔者理解的JVM图：
![在这里插入图片描述](https://img-blog.csdnimg.cn/20191019171506472.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjE0Njk5Ng==,size_16,color_FFFFFF,t_70)

### 关于GC:
GC算法请参考我的另一篇文章：
https://blog.csdn.net/weixin_42146996/article/details/102571871


还是先上图：
![在这里插入图片描述](https://img-blog.csdnimg.cn/20191019175121608.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjE0Njk5Ng==,size_16,color_FFFFFF,t_70)

上图我觉得已经解释的很详细了，笔者很懒，不想再多解释了













(String), JVM的内存模型很多人都看过，周志明老师的《深入理解Java虚拟机》已经解释的很清楚了。但是只限于概念性的知识，关于底层的原理并没有做深入的阐述，我们通过一个实例代码来分析JVM内存模型之间的联系与各模块之间的底层原理，底层比较复杂.(String), 1(Integer), 1(Integer), JVM(String), 27(Integer)
2020-01-03 11:59:21.858 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.A.updateByExampleSelective     : <==    Updates: 1
2020-01-03 11:59:21.952 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.A.selectByPrimaryKey           : ==>  Preparing: SELECT id,title,categoryId,author,addTime,agreeNum,browseNum,commentNum,keyWord,status,isRecommend,isTop,images,content,summary,isYuanChuang,isDiscuss,categoryName FROM article WHERE id = ? 
2020-01-03 11:59:21.952 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.A.selectByPrimaryKey           : ==> Parameters: 27(Integer)
2020-01-03 11:59:22.039 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.A.selectByPrimaryKey           : <==      Total: 1
2020-01-03 11:59:22.110 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.mapper.ArticleMapper.getPreOne   : ==>  Preparing: select * from article where id = (select MAX( id) from article where id < ?) 
2020-01-03 11:59:22.111 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.mapper.ArticleMapper.getPreOne   : ==> Parameters: 27(Integer)
2020-01-03 11:59:22.195 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.mapper.ArticleMapper.getPreOne   : <==      Total: 1
2020-01-03 11:59:22.262 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.mapper.ArticleMapper.getNextOne  : ==>  Preparing: select * from article where id = (select MIN( id) from article where id > ? ) 
2020-01-03 11:59:22.262 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.mapper.ArticleMapper.getNextOne  : ==> Parameters: 27(Integer)
2020-01-03 11:59:22.358 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.mapper.ArticleMapper.getNextOne  : <==      Total: 1
2020-01-03 11:59:22.510 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.ArticleMapper.selectByExample  : ==>  Preparing: SELECT id,title,categoryId,author,addTime,agreeNum,browseNum,commentNum,keyWord,status,isRecommend,isTop,images,content,summary,isYuanChuang,isDiscuss,categoryName FROM article WHERE ( keyWord like ? or title like ? or categoryName like ? ) 
2020-01-03 11:59:22.512 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.ArticleMapper.selectByExample  : ==> Parameters: %jvm%(String), % jvm内存模型%(String), %JVM%(String)
2020-01-03 11:59:22.592 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.ArticleMapper.selectByExample  : <==      Total: 3
2020-01-03 11:59:23.108 DEBUG 9580 --- [http-nio-8081-exec-2] c.l.b.m.m.VisitorMapper.selectByExample  : ==>  Preparing: SELECT id,time,ip,city,url,browseType,osType,black,visitCount FROM visitor WHERE ( ip = ? ) 
2020-01-03 11:59:23.110 DEBUG 9580 --- [http-nio-8081-exec-2] c.l.b.m.m.VisitorMapper.selectByExample  : ==> Parameters: 101.226.89.119(String)
2020-01-03 11:59:23.191 DEBUG 9580 --- [http-nio-8081-exec-2] c.l.b.m.m.VisitorMapper.selectByExample  : <==      Total: 75
2020-01-03 11:59:23.383 DEBUG 9580 --- [http-nio-8081-exec-2] c.l.b.m.mapper.VisitorMapper.insert      : ==>  Preparing: INSERT INTO visitor ( id,time,ip,city,url,browseType,osType,black,visitCount ) VALUES( ?,?,?,?,?,?,?,?,? ) 
2020-01-03 11:59:23.384 DEBUG 9580 --- [http-nio-8081-exec-2] c.l.b.m.mapper.VisitorMapper.insert      : ==> Parameters: null, 2020-01-03 11:59:23.202(Timestamp), 101.226.89.119(String), 中国上海(String), /page/login(String), Chrome(String), Windows 10(String), 1(Integer), null
2020-01-03 11:59:23.526 DEBUG 9580 --- [http-nio-8081-exec-2] c.l.b.m.mapper.VisitorMapper.insert      : <==    Updates: 1
2020-01-03 11:59:23.530 DEBUG 9580 --- [http-nio-8081-exec-2] c.l.b.m.m.V.insert!selectKey             : ==>  Executing: SELECT LAST_INSERT_ID() 
2020-01-03 11:59:23.600 DEBUG 9580 --- [http-nio-8081-exec-2] c.l.b.m.m.V.insert!selectKey             : <==      Total: 1
2020-01-03 11:59:23.886 DEBUG 9580 --- [http-nio-8081-exec-1] c.l.b.m.m.VisitorMapper.selectByExample  : ==>  Preparing: SELECT id,time,ip,city,url,browseType,osType,black,visitCount FROM visitor WHERE ( ip = ? ) 
2020-01-03 11:59:23.887 DEBUG 9580 --- [http-nio-8081-exec-1] c.l.b.m.m.VisitorMapper.selectByExample  : ==> Parameters: 101.226.89.64(String)
2020-01-03 11:59:23.960 DEBUG 9580 --- [http-nio-8081-exec-1] c.l.b.m.m.VisitorMapper.selectByExample  : <==      Total: 42
2020-01-03 11:59:24.039 DEBUG 9580 --- [http-nio-8081-exec-3] c.l.b.m.m.VisitorMapper.selectByExample  : ==>  Preparing: SELECT id,time,ip,city,url,browseType,osType,black,visitCount FROM visitor WHERE ( ip = ? ) 
2020-01-03 11:59:24.041 DEBUG 9580 --- [http-nio-8081-exec-3] c.l.b.m.m.VisitorMapper.selectByExample  : ==> Parameters: 180.153.205.253(String)
2020-01-03 11:59:24.116 DEBUG 9580 --- [http-nio-8081-exec-3] c.l.b.m.m.VisitorMapper.selectByExample  : <==      Total: 73
2020-01-03 11:59:24.173 DEBUG 9580 --- [http-nio-8081-exec-1] c.l.b.m.mapper.VisitorMapper.insert      : ==>  Preparing: INSERT INTO visitor ( id,time,ip,city,url,browseType,osType,black,visitCount ) VALUES( ?,?,?,?,?,?,?,?,? ) 
2020-01-03 11:59:24.175 DEBUG 9580 --- [http-nio-8081-exec-1] c.l.b.m.mapper.VisitorMapper.insert      : ==> Parameters: null, 2020-01-03 11:59:23.978(Timestamp), 101.226.89.64(String), 中国上海(String), /page/index(String), Chrome(String), Windows 10(String), 1(Integer), null
2020-01-03 11:59:24.256 DEBUG 9580 --- [http-nio-8081-exec-3] c.l.b.m.mapper.VisitorMapper.insert      : ==>  Preparing: INSERT INTO visitor ( id,time,ip,city,url,browseType,osType,black,visitCount ) VALUES( ?,?,?,?,?,?,?,?,? ) 
2020-01-03 11:59:24.259 DEBUG 9580 --- [http-nio-8081-exec-3] c.l.b.m.mapper.VisitorMapper.insert      : ==> Parameters: null, 2020-01-03 11:59:24.133(Timestamp), 180.153.205.253(String), 中国上海(String), /page/login(String), Chrome(String), Windows 10(String), 1(Integer), null
2020-01-03 11:59:24.280 DEBUG 9580 --- [http-nio-8081-exec-1] c.l.b.m.mapper.VisitorMapper.insert      : <==    Updates: 1
2020-01-03 11:59:24.281 DEBUG 9580 --- [http-nio-8081-exec-1] c.l.b.m.m.V.insert!selectKey             : ==>  Executing: SELECT LAST_INSERT_ID() 
2020-01-03 11:59:24.360 DEBUG 9580 --- [http-nio-8081-exec-1] c.l.b.m.m.V.insert!selectKey             : <==      Total: 1
2020-01-03 11:59:24.418 DEBUG 9580 --- [http-nio-8081-exec-3] c.l.b.m.mapper.VisitorMapper.insert      : <==    Updates: 1
2020-01-03 11:59:24.422 DEBUG 9580 --- [http-nio-8081-exec-3] c.l.b.m.m.V.insert!selectKey             : ==>  Executing: SELECT LAST_INSERT_ID() 
2020-01-03 11:59:24.551 DEBUG 9580 --- [http-nio-8081-exec-3] c.l.b.m.m.V.insert!selectKey             : <==      Total: 1
2020-01-03 11:59:24.618 DEBUG 9580 --- [http-nio-8081-exec-1] c.l.b.m.m.A.getArticleTenByTime          : ==>  Preparing: select * from article order by addTime desc LIMIT 10 
2020-01-03 11:59:24.621 DEBUG 9580 --- [http-nio-8081-exec-1] c.l.b.m.m.A.getArticleTenByTime          : ==> Parameters: 
2020-01-03 11:59:24.977 DEBUG 9580 --- [http-nio-8081-exec-1] c.l.b.m.m.A.getArticleTenByTime          : <==      Total: 10
2020-01-03 11:59:25.063 DEBUG 9580 --- [http-nio-8081-exec-1] c.l.b.m.m.ArticleMapper.selectByExample  : ==>  Preparing: SELECT id,title,categoryId,author,addTime,agreeNum,browseNum,commentNum,keyWord,status,isRecommend,isTop,images,content,summary,isYuanChuang,isDiscuss,categoryName FROM article WHERE ( isRecommend = ? ) 
2020-01-03 11:59:25.064 DEBUG 9580 --- [http-nio-8081-exec-1] c.l.b.m.m.ArticleMapper.selectByExample  : ==> Parameters: 1(Integer)
2020-01-03 11:59:25.292 DEBUG 9580 --- [http-nio-8081-exec-1] c.l.b.m.m.ArticleMapper.selectByExample  : <==      Total: 11
2020-01-03 11:59:25.389 DEBUG 9580 --- [http-nio-8081-exec-1] c.l.b.m.m.ArticleMapper.selectByExample  : ==>  Preparing: SELECT id,title,categoryId,author,addTime,agreeNum,browseNum,commentNum,keyWord,status,isRecommend,isTop,images,content,summary,isYuanChuang,isDiscuss,categoryName FROM article WHERE ( isTop = ? ) 
2020-01-03 11:59:25.391 DEBUG 9580 --- [http-nio-8081-exec-1] c.l.b.m.m.ArticleMapper.selectByExample  : ==> Parameters: 1(Integer)
2020-01-03 11:59:25.539 DEBUG 9580 --- [http-nio-8081-exec-1] c.l.b.m.m.ArticleMapper.selectByExample  : <==      Total: 9
2020-01-03 11:59:25.606 DEBUG 9580 --- [http-nio-8081-exec-1] c.l.b.m.m.A.getArticleByBrowsers         : ==>  Preparing: select * from article order by browsenum desc LIMIT 4 
2020-01-03 11:59:25.607 DEBUG 9580 --- [http-nio-8081-exec-1] c.l.b.m.m.A.getArticleByBrowsers         : ==> Parameters: 
2020-01-03 11:59:25.687 DEBUG 9580 --- [http-nio-8081-exec-1] c.l.b.m.m.A.getArticleByBrowsers         : <==      Total: 4
2020-01-03 11:59:25.819 DEBUG 9580 --- [http-nio-8081-exec-1] c.l.b.m.mapper.ArticleMapper.selectAll   : ==>  Preparing: SELECT id,title,categoryId,author,addTime,agreeNum,browseNum,commentNum,keyWord,status,isRecommend,isTop,images,content,summary,isYuanChuang,isDiscuss,categoryName FROM article 
2020-01-03 11:59:25.820 DEBUG 9580 --- [http-nio-8081-exec-1] c.l.b.m.mapper.ArticleMapper.selectAll   : ==> Parameters: 
2020-01-03 11:59:26.489 DEBUG 9580 --- [http-nio-8081-exec-1] c.l.b.m.mapper.ArticleMapper.selectAll   : <==      Total: 11
2020-01-03 11:59:26.678 DEBUG 9580 --- [http-nio-8081-exec-1] c.l.b.m.mapper.LinkMapper.selectAll      : ==>  Preparing: SELECT id,linkUrl,linkName,isAgree,addTime,clickNum FROM link 
2020-01-03 11:59:26.678 DEBUG 9580 --- [http-nio-8081-exec-1] c.l.b.m.mapper.LinkMapper.selectAll      : ==> Parameters: 
2020-01-03 11:59:26.794 DEBUG 9580 --- [http-nio-8081-exec-1] c.l.b.m.mapper.LinkMapper.selectAll      : <==      Total: 8
2020-01-03 11:59:27.138 DEBUG 9580 --- [http-nio-8081-exec-1] c.l.b.m.mapper.CategoryMapper.selectAll  : ==>  Preparing: SELECT id,categoryName,addTime,articleNum FROM category 
2020-01-03 11:59:27.139 DEBUG 9580 --- [http-nio-8081-exec-1] c.l.b.m.mapper.CategoryMapper.selectAll  : ==> Parameters: 
2020-01-03 11:59:27.456 DEBUG 9580 --- [http-nio-8081-exec-1] c.l.b.m.mapper.CategoryMapper.selectAll  : <==      Total: 10
2020-01-03 11:59:27.503 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.VisitorMapper.selectByExample  : ==>  Preparing: SELECT id,time,ip,city,url,browseType,osType,black,visitCount FROM visitor WHERE ( ip = ? ) 
2020-01-03 11:59:27.505 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.VisitorMapper.selectByExample  : ==> Parameters: 180.153.201.79(String)
2020-01-03 11:59:27.700 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.VisitorMapper.selectByExample  : <==      Total: 44
2020-01-03 11:59:27.968 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.mapper.VisitorMapper.insert      : ==>  Preparing: INSERT INTO visitor ( id,time,ip,city,url,browseType,osType,black,visitCount ) VALUES( ?,?,?,?,?,?,?,?,? ) 
2020-01-03 11:59:27.971 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.mapper.VisitorMapper.insert      : ==> Parameters: null, 2020-01-03 11:59:27.709(Timestamp), 180.153.201.79(String), 中国上海(String), /page/index(String), Chrome(String), Windows 10(String), 1(Integer), null
2020-01-03 11:59:28.181 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.mapper.VisitorMapper.insert      : <==    Updates: 1
2020-01-03 11:59:28.184 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.V.insert!selectKey             : ==>  Executing: SELECT LAST_INSERT_ID() 
2020-01-03 11:59:28.351 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.V.insert!selectKey             : <==      Total: 1
2020-01-03 11:59:28.646 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.A.getArticleTenByTime          : ==>  Preparing: select * from article order by addTime desc LIMIT 10 
2020-01-03 11:59:28.646 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.A.getArticleTenByTime          : ==> Parameters: 
2020-01-03 11:59:28.841 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.A.getArticleTenByTime          : <==      Total: 10
2020-01-03 11:59:28.902 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.ArticleMapper.selectByExample  : ==>  Preparing: SELECT id,title,categoryId,author,addTime,agreeNum,browseNum,commentNum,keyWord,status,isRecommend,isTop,images,content,summary,isYuanChuang,isDiscuss,categoryName FROM article WHERE ( isRecommend = ? ) 
2020-01-03 11:59:28.903 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.ArticleMapper.selectByExample  : ==> Parameters: 1(Integer)
2020-01-03 11:59:28.995 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.ArticleMapper.selectByExample  : <==      Total: 11
2020-01-03 11:59:29.116 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.ArticleMapper.selectByExample  : ==>  Preparing: SELECT id,title,categoryId,author,addTime,agreeNum,browseNum,commentNum,keyWord,status,isRecommend,isTop,images,content,summary,isYuanChuang,isDiscuss,categoryName FROM article WHERE ( isTop = ? ) 
2020-01-03 11:59:29.117 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.ArticleMapper.selectByExample  : ==> Parameters: 1(Integer)
2020-01-03 11:59:29.286 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.ArticleMapper.selectByExample  : <==      Total: 9
2020-01-03 11:59:29.366 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.A.getArticleByBrowsers         : ==>  Preparing: select * from article order by browsenum desc LIMIT 4 
2020-01-03 11:59:29.367 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.A.getArticleByBrowsers         : ==> Parameters: 
2020-01-03 11:59:29.442 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.A.getArticleByBrowsers         : <==      Total: 4
2020-01-03 11:59:29.504 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.mapper.ArticleMapper.selectAll   : ==>  Preparing: SELECT id,title,categoryId,author,addTime,agreeNum,browseNum,commentNum,keyWord,status,isRecommend,isTop,images,content,summary,isYuanChuang,isDiscuss,categoryName FROM article 
2020-01-03 11:59:29.505 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.mapper.ArticleMapper.selectAll   : ==> Parameters: 
2020-01-03 11:59:29.625 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.mapper.ArticleMapper.selectAll   : <==      Total: 11
2020-01-03 11:59:29.686 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.mapper.LinkMapper.selectAll      : ==>  Preparing: SELECT id,linkUrl,linkName,isAgree,addTime,clickNum FROM link 
2020-01-03 11:59:29.686 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.mapper.LinkMapper.selectAll      : ==> Parameters: 
2020-01-03 11:59:29.758 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.mapper.LinkMapper.selectAll      : <==      Total: 8
2020-01-03 11:59:29.823 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.mapper.CategoryMapper.selectAll  : ==>  Preparing: SELECT id,categoryName,addTime,articleNum FROM category 
2020-01-03 11:59:29.823 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.mapper.CategoryMapper.selectAll  : ==> Parameters: 
2020-01-03 11:59:29.891 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.mapper.CategoryMapper.selectAll  : <==      Total: 10
2020-01-03 11:59:30.273 DEBUG 9580 --- [http-nio-8081-exec-3] c.l.b.m.m.VisitorMapper.selectByExample  : ==>  Preparing: SELECT id,time,ip,city,url,browseType,osType,black,visitCount FROM visitor WHERE ( ip = ? ) 
2020-01-03 11:59:30.274 DEBUG 9580 --- [http-nio-8081-exec-3] c.l.b.m.m.VisitorMapper.selectByExample  : ==> Parameters: 101.226.51.229(String)
2020-01-03 11:59:30.339 DEBUG 9580 --- [http-nio-8081-exec-3] c.l.b.m.m.VisitorMapper.selectByExample  : <==      Total: 36
2020-01-03 11:59:30.511 DEBUG 9580 --- [http-nio-8081-exec-3] c.l.b.m.mapper.VisitorMapper.insert      : ==>  Preparing: INSERT INTO visitor ( id,time,ip,city,url,browseType,osType,black,visitCount ) VALUES( ?,?,?,?,?,?,?,?,? ) 
2020-01-03 11:59:30.512 DEBUG 9580 --- [http-nio-8081-exec-3] c.l.b.m.mapper.VisitorMapper.insert      : ==> Parameters: null, 2020-01-03 11:59:30.345(Timestamp), 101.226.51.229(String), 中国上海(String), /page/login(String), Chrome(String), Windows 10(String), 1(Integer), null
2020-01-03 11:59:30.639 DEBUG 9580 --- [http-nio-8081-exec-3] c.l.b.m.mapper.VisitorMapper.insert      : <==    Updates: 1
2020-01-03 11:59:30.640 DEBUG 9580 --- [http-nio-8081-exec-3] c.l.b.m.m.V.insert!selectKey             : ==>  Executing: SELECT LAST_INSERT_ID() 
2020-01-03 11:59:30.702 DEBUG 9580 --- [http-nio-8081-exec-3] c.l.b.m.m.V.insert!selectKey             : <==      Total: 1
2020-01-03 11:59:31.018 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.VisitorMapper.selectByExample  : ==>  Preparing: SELECT id,time,ip,city,url,browseType,osType,black,visitCount FROM visitor WHERE ( ip = ? ) 
2020-01-03 11:59:31.019 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.VisitorMapper.selectByExample  : ==> Parameters: 180.153.205.254(String)
2020-01-03 11:59:31.091 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.VisitorMapper.selectByExample  : <==      Total: 72
2020-01-03 11:59:31.238 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.mapper.VisitorMapper.insert      : ==>  Preparing: INSERT INTO visitor ( id,time,ip,city,url,browseType,osType,black,visitCount ) VALUES( ?,?,?,?,?,?,?,?,? ) 
2020-01-03 11:59:31.238 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.mapper.VisitorMapper.insert      : ==> Parameters: null, 2020-01-03 11:59:31.099(Timestamp), 180.153.205.254(String), 中国上海(String), /page/login(String), Chrome(String), Windows 10(String), 1(Integer), null
2020-01-03 11:59:31.426 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.mapper.VisitorMapper.insert      : <==    Updates: 1
2020-01-03 11:59:31.427 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.V.insert!selectKey             : ==>  Executing: SELECT LAST_INSERT_ID() 
2020-01-03 11:59:31.691 DEBUG 9580 --- [http-nio-8081-exec-5] c.l.b.m.m.V.insert!selectKey             : <==      Total: 1
2020-01-03 11:59:32.258 DEBUG 9580 --- [http-nio-8081-exec-1] c.l.b.m.m.VisitorMapper.selectByExample  : ==>  Preparing: SELECT id,time,ip,city,url,browseType,osType,black,visitCount FROM visitor WHERE ( ip = ? ) 
2020-01-03 11:59:32.259 DEBUG 9580 --- [http-nio-8081-exec-1] c.l.b.m.m.VisitorMapper.selectByExample  : ==> Parameters: 180.153.201.66(String)
2020-01-03 11:59:32.324 DEBUG 9580 --- [http-nio-8081-exec-1] c.l.b.m.m.VisitorMapper.selectByExample  : <==      Total: 88
2020-01-03 11:59:32.473 DEBUG 9580 --- [http-nio-8081-exec-1] c.l.b.m.mapper.VisitorMapper.insert      : ==>  Preparing: INSERT INTO visitor ( id,time,ip,city,url,browseType,osType,black,visitCount ) VALUES( ?,?,?,?,?,?,?,?,? ) 
2020-01-03 11:59:32.474 DEBUG 9580 --- [http-nio-8081-exec-1] c.l.b.m.mapper.VisitorMapper.insert      : ==> Parameters: null, 2020-01-03 11:59:32.331(Timestamp), 180.153.201.66(String), 中国上海(String), /page/login(String), Chrome(String), Windows 10(String), 1(Integer), null
2020-01-03 11:59:32.603 DEBUG 9580 --- [http-nio-8081-exec-1] c.l.b.m.mapper.VisitorMapper.insert      : <==    Updates: 1
2020-01-03 11:59:32.603 DEBUG 9580 --- [http-nio-8081-exec-1] c.l.b.m.m.V.insert!selectKey             : ==>  Executing: SELECT LAST_INSERT_ID() 
2020-01-03 11:59:32.704 DEBUG 9580 --- [http-nio-8081-exec-1] c.l.b.m.m.V.insert!selectKey             : <==      Total: 1
2020-01-03 12:04:35.108 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.m.VisitorMapper.selectByExample  : ==>  Preparing: SELECT id,time,ip,city,url,browseType,osType,black,visitCount FROM visitor WHERE ( ip = ? ) 
2020-01-03 12:04:35.109 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.m.VisitorMapper.selectByExample  : ==> Parameters: 101.226.66.172(String)
2020-01-03 12:04:35.195 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.m.VisitorMapper.selectByExample  : <==      Total: 32
2020-01-03 12:04:35.385 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.mapper.VisitorMapper.insert      : ==>  Preparing: INSERT INTO visitor ( id,time,ip,city,url,browseType,osType,black,visitCount ) VALUES( ?,?,?,?,?,?,?,?,? ) 
2020-01-03 12:04:35.386 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.mapper.VisitorMapper.insert      : ==> Parameters: null, 2020-01-03 12:04:35.2(Timestamp), 101.226.66.172(String), 中国上海(String), /page/27/blogDetail(String), Chrome(String), Windows 10(String), 1(Integer), null
2020-01-03 12:04:35.510 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.mapper.VisitorMapper.insert      : <==    Updates: 1
2020-01-03 12:04:35.511 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.m.V.insert!selectKey             : ==>  Executing: SELECT LAST_INSERT_ID() 
2020-01-03 12:04:35.573 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.m.V.insert!selectKey             : <==      Total: 1
2020-01-03 12:04:35.839 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.m.VisitorMapper.selectByExample  : ==>  Preparing: SELECT id,time,ip,city,url,browseType,osType,black,visitCount FROM visitor WHERE ( ip = ? ) 
2020-01-03 12:04:35.841 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.m.VisitorMapper.selectByExample  : ==> Parameters: 180.153.206.35(String)
2020-01-03 12:04:35.907 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.m.VisitorMapper.selectByExample  : <==      Total: 38
2020-01-03 12:04:36.099 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.mapper.VisitorMapper.insert      : ==>  Preparing: INSERT INTO visitor ( id,time,ip,city,url,browseType,osType,black,visitCount ) VALUES( ?,?,?,?,?,?,?,?,? ) 
2020-01-03 12:04:36.101 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.mapper.VisitorMapper.insert      : ==> Parameters: null, 2020-01-03 12:04:35.917(Timestamp), 180.153.206.35(String), 中国上海(String), /page/27/blogDetail(String), Chrome(String), Windows 10(String), 1(Integer), null
2020-01-03 12:04:36.237 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.mapper.VisitorMapper.insert      : <==    Updates: 1
2020-01-03 12:04:36.238 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.m.V.insert!selectKey             : ==>  Executing: SELECT LAST_INSERT_ID() 
2020-01-03 12:04:36.303 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.m.V.insert!selectKey             : <==      Total: 1
2020-01-03 12:04:36.560 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.m.ArticleMapper.selectByExample  : ==>  Preparing: SELECT id,title,categoryId,author,addTime,agreeNum,browseNum,commentNum,keyWord,status,isRecommend,isTop,images,content,summary,isYuanChuang,isDiscuss,categoryName FROM article WHERE ( isRecommend = ? ) 
2020-01-03 12:04:36.562 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.m.ArticleMapper.selectByExample  : ==> Parameters: 1(Integer)
2020-01-03 12:04:36.774 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.m.ArticleMapper.selectByExample  : <==      Total: 11
2020-01-03 12:04:36.852 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.m.ArticleMapper.selectByExample  : ==>  Preparing: SELECT id,title,categoryId,author,addTime,agreeNum,browseNum,commentNum,keyWord,status,isRecommend,isTop,images,content,summary,isYuanChuang,isDiscuss,categoryName FROM article WHERE ( isTop = ? ) 
2020-01-03 12:04:36.854 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.m.ArticleMapper.selectByExample  : ==> Parameters: 1(Integer)
2020-01-03 12:04:36.970 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.m.ArticleMapper.selectByExample  : <==      Total: 9
2020-01-03 12:04:37.051 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.m.A.getArticleByBrowsers         : ==>  Preparing: select * from article order by browsenum desc LIMIT 4 
2020-01-03 12:04:37.052 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.m.A.getArticleByBrowsers         : ==> Parameters: 
2020-01-03 12:04:37.137 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.m.A.getArticleByBrowsers         : <==      Total: 4
2020-01-03 12:04:37.200 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.mapper.ArticleMapper.selectAll   : ==>  Preparing: SELECT id,title,categoryId,author,addTime,agreeNum,browseNum,commentNum,keyWord,status,isRecommend,isTop,images,content,summary,isYuanChuang,isDiscuss,categoryName FROM article 
2020-01-03 12:04:37.200 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.mapper.ArticleMapper.selectAll   : ==> Parameters: 
2020-01-03 12:04:37.272 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.mapper.ArticleMapper.selectAll   : <==      Total: 11
2020-01-03 12:04:37.358 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.mapper.LinkMapper.selectAll      : ==>  Preparing: SELECT id,linkUrl,linkName,isAgree,addTime,clickNum FROM link 
2020-01-03 12:04:37.358 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.mapper.LinkMapper.selectAll      : ==> Parameters: 
2020-01-03 12:04:37.418 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.mapper.LinkMapper.selectAll      : <==      Total: 8
2020-01-03 12:04:37.488 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.mapper.CategoryMapper.selectAll  : ==>  Preparing: SELECT id,categoryName,addTime,articleNum FROM category 
2020-01-03 12:04:37.488 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.mapper.CategoryMapper.selectAll  : ==> Parameters: 
2020-01-03 12:04:37.549 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.mapper.CategoryMapper.selectAll  : <==      Total: 10
2020-01-03 12:04:37.644 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.m.A.selectOneByExample           : ==>  Preparing: SELECT id,title,categoryId,author,addTime,agreeNum,browseNum,commentNum,keyWord,status,isRecommend,isTop,images,content,summary,isYuanChuang,isDiscuss,categoryName FROM article WHERE ( id = ? ) 
2020-01-03 12:04:37.645 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.m.A.selectOneByExample           : ==> Parameters: 27(Integer)
2020-01-03 12:04:37.713 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.m.A.selectOneByExample           : <==      Total: 1
2020-01-03 12:04:37.816 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.m.A.updateByExampleSelective     : ==>  Preparing: UPDATE article SET id = id,title = ?,categoryId = ?,author = ?,addTime = ?,agreeNum = ?,browseNum = ?,commentNum = ?,keyWord = ?,status = ?,isRecommend = ?,isTop = ?,images = ?,content = ?,summary = ?,isYuanChuang = ?,isDiscuss = ?,categoryName = ? WHERE ( id = ? ) 
2020-01-03 12:04:37.819 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.m.A.updateByExampleSelective     : ==> Parameters:  jvm内存模型(String), 7(Integer), 何袁辉(String), 2019-12-03 18:06:38.0(Timestamp), 9(Integer), 68(Integer), 0(Integer), jvm(String), 1(Integer), 1(Integer), 1(Integer), http://localhost:8081/images/82ad18fca433c2a102319063a17cfc8f1575335182602.jpg(String), ### jvm内存模型
JVM的内存模型很多人都看过，周志明老师的《深入理解Java虚拟机》已经解释的很清楚了。但是只限于概念性的知识，关于底层的原理并没有做深入的阐述，下面我们通过一个实例代码来分析JVM内存模型之间的联系与各模块之间的底层原理，底层比较复杂，可能篇幅有点长，请耐心阅读，一定给你讲透彻，阅读本文建议同《深入理解JVM》这本书一起参考。

此处先上一段代码，以下通过代码逐步分析：

```java

public class Math {
	public int compute(){          //一个方法对应一块栈帧内存区域
		int a=1;
		int b=2;
		int c=(a+b)*10;
		return c;
	}
	public static void main(String[] args) {
		Math math=new Math();
		math.compute();
	}
}
```

这段代码生成的字节码文件如下：

```java

Compiled from "Math.java"
public class com.lucas.Demo1.Math {
  public static final java.lang.Integer CONATANT;

  public com.lucas.Demo1.Math();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public int compute();
    Code:
       0: iconst_1
       1: istore_1
       2: iconst_2
       3: istore_2
       4: iload_1
       5: iload_2
       6: iadd
       7: bipush        10
       9: imul
      10: istore_3
      11: iload_3
      12: ireturn

  public static void main(java.lang.String[]);
    Code:
       0: new           #2                  // class com/lucas/Demo1/Math
       3: dup
       4: invokespecial #3                  // Method "<init>":()V
       7: astore_1
       8: aload_1
       9: invokevirtual #4                  // Method compute:()I
      12: pop
      13: return

  static {};
    Code:
       0: sipush        666
       3: invokestatic  #5                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       6: putstatic     #6                  // Field CONATANT:Ljava/lang/Integer;
       9: return
}

```




还是先上最经典的那一幅JVM内存模型图：
![在这里插入图片描述](https://img-blog.csdnimg.cn/20191019151724253.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjE0Njk5Ng==,size_16,color_FFFFFF,t_70)

我们先来分析虚拟机栈的内存结构（图中箭头可以不考虑，只是局部的图）：
![在这里插入图片描述](https://img-blog.csdnimg.cn/20191019154505572.png)

以上图片的名词在此不做解释，默认读者已经知道，我们主要探究每一块区域的底层原理。

以上java在执行时，线程main在虚拟机栈内存中开辟一块空间。每个方法按照顺序依次进栈，每一个方法在执行时开辟一个栈帧，栈帧中存储的信息见上图。下面依次解释每一个区域的作用：以下不讲定义，只是以上面代码为实例，加上作者本人的理解，如有偏差，请自行取舍。

#### 局部变量表：
故名思意就是存放局部变量的，以上代码中，在  **compute（）** 方法创建的栈帧的局部变量表中存放的是：a,b,c三个局部变量，在 **main()** 方法创建的栈帧的局部变量表中存放的是 math这个变量。
#### 操作数栈：
在作者的理解看来，操作数栈就是一个中转站。
对照前面的字节码指令，我们可以很清晰的知道了每一步，虚拟机的底层干了哪些事。
第一步，执行iconst命令
将一个常量加载到操作数栈![在这里插入图片描述](https://img-blog.csdnimg.cn/20191019155802174.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjE0Njk5Ng==,size_16,color_FFFFFF,t_70)
这时我们可以看到操作数栈中有2个常量 1 和 2；

第二步：执行字节码指令istore，将整型类型值存入局部变量中，并将操作数栈的内存释放出来。
![在这里插入图片描述](https://img-blog.csdnimg.cn/20191019162230527.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjE0Njk5Ng==,size_16,color_FFFFFF,t_70)
第三步：执行字节码指令： 
   

  
```java
    4: iload_1
    5: iload_2
    6: iadd
    7: bipush        10
    9: imul
    10: istore_3
    11: iload_3
    12: ireturn
```

:从局部变量中装载第一个int类型的值到操作数栈
![在这里插入图片描述](https://img-blog.csdnimg.cn/20191019170110428.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjE0Njk5Ng==,size_16,color_FFFFFF,t_70)
以上图片难以准确的解释程序执行时JVM的执行流程，建议研究以上字节码文件，指令可查看字节码指令手册，其实研究JVM的工作流程，最好的方式就是研究字节码文件。



#### 动态连接区域：
笔者尚未彻底明白。。。欢迎朋友们给我留言，交流


笔者理解的JVM图：
![在这里插入图片描述](https://img-blog.csdnimg.cn/20191019171506472.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjE0Njk5Ng==,size_16,color_FFFFFF,t_70)

### 关于GC:
GC算法请参考我的另一篇文章：
https://blog.csdn.net/weixin_42146996/article/details/102571871


还是先上图：
![在这里插入图片描述](https://img-blog.csdnimg.cn/20191019175121608.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjE0Njk5Ng==,size_16,color_FFFFFF,t_70)

上图我觉得已经解释的很详细了，笔者很懒，不想再多解释了













(String), JVM的内存模型很多人都看过，周志明老师的《深入理解Java虚拟机》已经解释的很清楚了。但是只限于概念性的知识，关于底层的原理并没有做深入的阐述，我们通过一个实例代码来分析JVM内存模型之间的联系与各模块之间的底层原理，底层比较复杂.(String), 1(Integer), 1(Integer), JVM(String), 27(Integer)
2020-01-03 12:04:37.953 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.m.A.updateByExampleSelective     : <==    Updates: 1
2020-01-03 12:04:38.015 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.m.A.selectByPrimaryKey           : ==>  Preparing: SELECT id,title,categoryId,author,addTime,agreeNum,browseNum,commentNum,keyWord,status,isRecommend,isTop,images,content,summary,isYuanChuang,isDiscuss,categoryName FROM article WHERE id = ? 
2020-01-03 12:04:38.015 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.m.A.selectByPrimaryKey           : ==> Parameters: 27(Integer)
2020-01-03 12:04:38.076 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.m.A.selectByPrimaryKey           : <==      Total: 1
2020-01-03 12:04:38.140 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.mapper.ArticleMapper.getPreOne   : ==>  Preparing: select * from article where id = (select MAX( id) from article where id < ?) 
2020-01-03 12:04:38.140 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.mapper.ArticleMapper.getPreOne   : ==> Parameters: 27(Integer)
2020-01-03 12:04:38.203 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.mapper.ArticleMapper.getPreOne   : <==      Total: 1
2020-01-03 12:04:38.266 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.mapper.ArticleMapper.getNextOne  : ==>  Preparing: select * from article where id = (select MIN( id) from article where id > ? ) 
2020-01-03 12:04:38.267 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.mapper.ArticleMapper.getNextOne  : ==> Parameters: 27(Integer)
2020-01-03 12:04:38.331 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.mapper.ArticleMapper.getNextOne  : <==      Total: 1
2020-01-03 12:04:38.404 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.m.ArticleMapper.selectByExample  : ==>  Preparing: SELECT id,title,categoryId,author,addTime,agreeNum,browseNum,commentNum,keyWord,status,isRecommend,isTop,images,content,summary,isYuanChuang,isDiscuss,categoryName FROM article WHERE ( keyWord like ? or title like ? or categoryName like ? ) 
2020-01-03 12:04:38.404 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.m.ArticleMapper.selectByExample  : ==> Parameters: %jvm%(String), % jvm内存模型%(String), %JVM%(String)
2020-01-03 12:04:38.467 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.m.ArticleMapper.selectByExample  : <==      Total: 3
2020-01-03 12:04:38.891 DEBUG 9580 --- [http-nio-8081-exec-2] c.l.b.m.m.VisitorMapper.selectByExample  : ==>  Preparing: SELECT id,time,ip,city,url,browseType,osType,black,visitCount FROM visitor WHERE ( ip = ? ) 
2020-01-03 12:04:38.892 DEBUG 9580 --- [http-nio-8081-exec-2] c.l.b.m.m.VisitorMapper.selectByExample  : ==> Parameters: 101.226.66.180(String)
2020-01-03 12:04:38.961 DEBUG 9580 --- [http-nio-8081-exec-2] c.l.b.m.m.VisitorMapper.selectByExample  : <==      Total: 71
2020-01-03 12:04:39.089 DEBUG 9580 --- [http-nio-8081-exec-2] c.l.b.m.mapper.VisitorMapper.insert      : ==>  Preparing: INSERT INTO visitor ( id,time,ip,city,url,browseType,osType,black,visitCount ) VALUES( ?,?,?,?,?,?,?,?,? ) 
2020-01-03 12:04:39.090 DEBUG 9580 --- [http-nio-8081-exec-2] c.l.b.m.mapper.VisitorMapper.insert      : ==> Parameters: null, 2020-01-03 12:04:38.966(Timestamp), 101.226.66.180(String), 中国上海(String), /page/login(String), Chrome(String), Windows 10(String), 1(Integer), null
2020-01-03 12:04:39.218 DEBUG 9580 --- [http-nio-8081-exec-2] c.l.b.m.mapper.VisitorMapper.insert      : <==    Updates: 1
2020-01-03 12:04:39.218 DEBUG 9580 --- [http-nio-8081-exec-2] c.l.b.m.m.V.insert!selectKey             : ==>  Executing: SELECT LAST_INSERT_ID() 
2020-01-03 12:04:39.283 DEBUG 9580 --- [http-nio-8081-exec-2] c.l.b.m.m.V.insert!selectKey             : <==      Total: 1
2020-01-03 12:04:39.533 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.m.VisitorMapper.selectByExample  : ==>  Preparing: SELECT id,time,ip,city,url,browseType,osType,black,visitCount FROM visitor WHERE ( ip = ? ) 
2020-01-03 12:04:39.533 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.m.VisitorMapper.selectByExample  : ==> Parameters: 180.153.214.176(String)
2020-01-03 12:04:39.601 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.m.VisitorMapper.selectByExample  : <==      Total: 45
2020-01-03 12:04:39.725 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.mapper.VisitorMapper.insert      : ==>  Preparing: INSERT INTO visitor ( id,time,ip,city,url,browseType,osType,black,visitCount ) VALUES( ?,?,?,?,?,?,?,?,? ) 
2020-01-03 12:04:39.727 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.mapper.VisitorMapper.insert      : ==> Parameters: null, 2020-01-03 12:04:39.605(Timestamp), 180.153.214.176(String), 中国上海(String), /page/login(String), Chrome(String), Windows 10(String), 1(Integer), null
2020-01-03 12:04:39.865 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.mapper.VisitorMapper.insert      : <==    Updates: 1
2020-01-03 12:04:39.865 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.m.V.insert!selectKey             : ==>  Executing: SELECT LAST_INSERT_ID() 
2020-01-03 12:04:39.923 DEBUG 9580 --- [http-nio-8081-exec-8] c.l.b.m.m.V.insert!selectKey             : <==      Total: 1
